whitespace:\s+
!comment:/\*([^*]|\*+[^*/])*\*+/
comment://[^\n\r]*
auto:auto
break:break
case:case
char:char
const:const
continue:continue
default:default
do:do
double:double
else:else
enum:enum
extern:extern
float:float
for:for
goto:goto
if:if
inline:inline
int:int
long:long
register:register
restrict:restrict
return:return
short:short
signed:signed
sizeof:sizeof
static:static
struct:struct
switch:switch
typedef:typedef
union:union
unsigned:unsigned
void:void
volatile:volatile
while:while
alignas:_Alignas
alignof:_Alignof
atomic:_Atomic
bool:_Bool
complex:_Complex
generic:_Generic
imaginary:_Imaginary
noreturn:_Noreturn
staticassert:_Static_assert
threadlocal:_Thread_local
constant:0|[1-9][0-9]*
constant:'(\\['"?\\abfnrtv]|[^'\n\r\\]|\\x[0-9A-Fa-f]+)'
identifier:[a-zA-Z_][a-zA-Z0-9_]*
string-literal:"([^\"\n\r\\\0]|\\['"?\\abfnrtv]|\\x[0-9A-Fa-f]+)*"
leftParen:\(
rightParen:\)
leftBracket:\[
rightBracket:\]
leftBrace:\{
rightBrace:\}
less:<
lessEqual:<=
greater:>
greaterEqual:>=
leftShift:<<
rightShift:>>
plus:\+
plusPlus:\+\+
minus:-
minusMinus:--
star:\*
div:/
mod:%
and:&
or:\|
andAnd:&&
orOr:\|\|
caret:^
not:!
tilde:~
question:\?
colon::
semi:;
comma:,
assign:=
starAssign:\*=
divAssign:/=
modAssign:%=
plusAssign:\+=
minusAssign:-=
leftShiftAssign:<<=
rightShiftAssign:>>=
andAssign:&=
xorAssign:^=
orAssign:\|=
equal:==
notEqual:!=
arrow:->
dot:\.
ellipsis:\.\.\.
hash:#
doubleHash:##
leftBracketReplacementReplacement:<:
rightBracketReplacement::>
leftBraceReplacement:<%
rightBraceReplacement:%>
hashReplacement:%:
doubleHashReplacement:%:%: